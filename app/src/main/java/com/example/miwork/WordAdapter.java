package com.example.miwork;import android.content.Context;import android.graphics.drawable.Drawable;import android.media.AudioManager;import android.media.MediaPlayer;import android.net.Uri;import android.provider.MediaStore;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ArrayAdapter;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import java.io.IOException;import java.util.ArrayList;import java.util.List;public class WordAdapter extends ArrayAdapter<Word> {    private final int colorId;    private final ItemCLickListener itemCLickListener = new ItemCLickListener(this.getContext());    public WordAdapter(@NonNull Context context, @NonNull ArrayList<Word> wordList, int colorId) {        super(context, 0, wordList);        this.colorId = colorId;    }    @NonNull    @Override    public View getView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {        Word currentWord = super.getItem(position);        View wordItemView = convertView;        if(wordItemView == null){            wordItemView = LayoutInflater.from(super.getContext()).inflate(R.layout.word_list_item, parent, false);        }        TextView miwokText = wordItemView.findViewById(R.id.miwokText);        miwokText.setText(currentWord.getMiwokWord());        TextView englishText = wordItemView.findViewById(R.id.englishText);        englishText.setText(currentWord.getEnglishWord());        ImageView imageView = wordItemView.findViewById(R.id.wordImage);        if(currentWord.getImageId() != -1){            imageView.setImageResource(currentWord.getImageId());        }else{            imageView.setVisibility(View.GONE);        }        View backgroundColorView = wordItemView.findViewById(R.id.backgroundView);        backgroundColorView.setBackgroundResource(this.colorId);        LinearLayout playButton = wordItemView.findViewById(R.id.playButton);        ((TextView) playButton.findViewById(R.id.audioId)).setText(String.valueOf(currentWord.getAudioId()));//        Log.d("AUDIOID " , "" + currentWord.getAudioId());        playButton.setOnClickListener(itemCLickListener);        return wordItemView;    }    public void releaseMediaPlayer(){        itemCLickListener.musicHelper();    }}class ItemCLickListener implements View.OnClickListener{    private MediaPlayer mediaPlayer;    private final Context context;    AudioManager audioManager;    public ItemCLickListener(Context context){        this.context = context;        this.audioManager = (AudioManager) context.getSystemService(Context.AUDIO_SERVICE);    }    MediaPlayer.OnCompletionListener onCompletionListener = new MediaPlayer.OnCompletionListener() {        @Override        public void onCompletion(MediaPlayer mp) {            musicHelper();            audioManager.abandonAudioFocus(audioFocusChangeListener);        }    };    AudioManager.OnAudioFocusChangeListener audioFocusChangeListener = new AudioManager.OnAudioFocusChangeListener() {        @Override        public void onAudioFocusChange(int focusChange) {            if(focusChange != AudioManager.AUDIOFOCUS_GAIN){                musicHelper();            }        }    };    public void onClick(View v){        TextView textView = v.findViewById(R.id.audioId);        int audioId = Integer.parseInt((String) textView.getText());        int audioFoucsRequestResult = audioManager.requestAudioFocus(audioFocusChangeListener, AudioManager.STREAM_MUSIC,                AudioManager.AUDIOFOCUS_GAIN_TRANSIENT);        if(audioFoucsRequestResult == AudioManager.AUDIOFOCUS_REQUEST_GRANTED){            musicHelper();            mediaPlayer = MediaPlayer.create(context, audioId);            mediaPlayer.start();            mediaPlayer.setOnCompletionListener(onCompletionListener);        }    }    public void musicHelper(){        if(mediaPlayer != null){            mediaPlayer.release();            mediaPlayer = null;        }    }}